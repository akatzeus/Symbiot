#Dependencies
sudo apt update
sudo apt install python3-opencv
pip install numpy tensorflow tensorflow-lite

#Pi Camera 
sudo raspi-config  # Enable camera in interface options

#After model is trained 
import cv2
import numpy as np
import tensorflow as tf

# Load the TFLite model and allocate tensors
interpreter = tf.lite.Interpreter(model_path="leaf_disease_model.tflite")
interpreter.allocate_tensors()

# Get input/output details
input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()
input_shape = input_details[0]['shape']

# Load labels
with open("labels.txt", "r") as f:
    labels = [line.strip() for line in f.readlines()]

# Initialize camera
cap = cv2.VideoCapture(0)

while True:
    ret, frame = cap.read()
    if not ret:
        break

    # Preprocess the image
    img = cv2.resize(frame, (input_shape[1], input_shape[2]))
    img = np.expand_dims(img, axis=0).astype(np.float32) / 255.0

    # Set the tensor to point to the input data
    interpreter.set_tensor(input_details[0]['index'], img)

    # Run inference
    interpreter.invoke()

    # Get results
    output_data = interpreter.get_tensor(output_details[0]['index'])
    predicted_idx = np.argmax(output_data)
    prediction = labels[predicted_idx]
    confidence = output_data[0][predicted_idx]

    # Display prediction
    cv2.putText(frame, f"{prediction} ({confidence*100:.2f}%)", (10, 30),
                cv2.FONT_HERSHEY_SIMPLEX, 0.8, (0, 255, 0), 2)
    cv2.imshow("Leaf Disease Detection", frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
